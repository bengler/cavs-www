aliases:
- &dockerauth
  username: $$DOCKER_USERNAME
  password: "$$DOCKER_PASSWORD"
  email: $$DOCKER_EMAIL

- &volumes
  - "/root/.docker:/root/.docker"
  - "/root/.kube:/root/.kube"
  - "/var/run/docker.sock:/var/run/docker.sock"
  - "/root/.npmrc:/root/.npmrc"

cache:
  mount:
  - .git

build:
  build:
    image: eu.gcr.io/sanity-cloud/ci
    pull: true
    auth_config: *dockerauth
    volumes: *volumes
    commands:
    - docker build --build-arg NPMRC="$(cat ~/.npmrc)" --pull -t eu.gcr.io/sanity-cloud/cavs-www:$$COMMIT .

  publish:
    image: eu.gcr.io/sanity-cloud/ci
    auth_config: *dockerauth
    volumes: *volumes
    commands:
    - docker tag eu.gcr.io/sanity-cloud/cavs-www:$$COMMIT eu.gcr.io/sanity-cloud/cavs-www:$$BRANCH
    - docker push eu.gcr.io/sanity-cloud/cavs-www:$$COMMIT
    - docker push eu.gcr.io/sanity-cloud/cavs-www:$$BRANCH
    when:
      event: push

  deploy:
    image: eu.gcr.io/sanity-cloud/ci
    auth_config: *dockerauth
    volumes: *volumes
    commands:
    - "sed -i -re 's/(image:[^:]+)($|:.+$)/\\1:$$COMMIT/g' kubernetes/production/deployment.yaml"
    - kubectl --context kubernetes01-eu-w1 --namespace clients apply -f kubernetes/production/
    - 'curl https://intake.opbeat.com/api/v1/organizations/$$OPBEAT_ORG/apps/950d503819/releases/ -o /dev/null -sSf -H "Authorization: Bearer $$OPBEAT_TOKEN" -d rev=`git log -n 1 --pretty=format:%H` -d branch=`git rev-parse --abbrev-ref HEAD` -d status=completed'
    when:
      branch: master
      event: push

  deploy-staging:
    image: eu.gcr.io/sanity-cloud/ci
    auth_config: *dockerauth
    volumes: *volumes
    commands:
    - "sed -i -re 's/(image:[^:]+)($|:.+$)/\\1:$$COMMIT/g' kubernetes/staging/deployment.yaml"
    - kubectl --context kubernetes01-eu-w1 --namespace clients-staging apply -f kubernetes/staging/
    - 'curl https://intake.opbeat.com/api/v1/organizations/$$OPBEAT_ORG/apps/b4fe6bbc01/releases/ -o /dev/null -sSf -H "Authorization: Bearer $$OPBEAT_TOKEN" -d rev=`git log -n 1 --pretty=format:%H` -d branch=`git rev-parse --abbrev-ref HEAD` -d status=completed'
    when:
      branch: staging
      event: push

notify:
  email:
    from: $$SMTP_FROM
    host: $$SMTP_HOST
    port: $$SMTP_PORT
    username: $$SMTP_USERNAME
    password: $$SMTP_PASSWORD
    when:
      failure: true

  slack:
    webhook_url: $$SLACK_WEBHOOK
    username: $$SLACK_USERNAME
    channel: $$SLACK_CHANNEL
    template: "$$SLACK_TEMPLATE"
    when:
      failure: true
      change: true
